<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gsdd</groupId>
	<artifactId>jaxrs-client</artifactId>
	<packaging>jar</packaging>
	<version>1.0.001</version>
	<name>jaxrs-client</name>
	<description>Jaxrs 2.0 rest client</description>

	<properties>
		<!-- Gral settings -->
		<project.encoding>UTF-8</project.encoding>
		<project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
		<project.build.targetEncoding>${project.encoding}</project.build.targetEncoding>
		<project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<doc-lint>none</doc-lint>

		<!-- other plugin versions -->
		<mvn.javadoc.plugin.version>3.1.1</mvn.javadoc.plugin.version>
		<mvn.failsafe.plugin.version>3.0.0-M4</mvn.failsafe.plugin.version>
		<mvn.surefire.plugin.version>3.0.0-M4</mvn.surefire.plugin.version>
		<mvn.jacoco.plugin.version>0.8.7</mvn.jacoco.plugin.version>
		<mvn.fmt.plugin.version>2.10.0</mvn.fmt.plugin.version>
		<mvn.dependency.plugin.version>3.1.1</mvn.dependency.plugin.version>
		<mvn.source.plugin.version>3.2.0</mvn.source.plugin.version>

		<!-- Code coverage -->
		<!-- If true skips UT test execution -->
		<skip.unit.tests>false</skip.unit.tests>
		<!-- If true skips IT test execution -->
		<skip.integration.tests>false</skip.integration.tests>
		<!-- It centralize the jacoco reports for sonarqube -->
		<jacoco.ut.reportPath>${project.basedir}/target/coverage-report/jacoco-ut.exec</jacoco.ut.reportPath>
		<jacoco.ut.reportPath.site>${project.reporting.outputDirectory}/jacoco-ut</jacoco.ut.reportPath.site>
		<jacoco.it.reportPath>${project.basedir}/target/coverage-report/jacoco-it.exec</jacoco.it.reportPath>
		<jacoco.it.reportPath.site>${project.reporting.outputDirectory}/jacoco-it</jacoco.it.reportPath.site>

		<!-- Testing dependencies -->
		<junit.version>5.8.2</junit.version>
		<mockito.version>4.4.0</mockito.version>
		<httpclient.version>4.5</httpclient.version>
		<resteasy.version>3.0.14.Final</resteasy.version>

		<!-- Gral dependencies -->
		<lombok.version>1.18.24</lombok.version>
		<javaee.api.version>8.0</javaee.api.version>
		<commons.lang.version>3.9</commons.lang.version>
		<slf4j.version>1.7.36</slf4j.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>${resteasy.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons.lang.version}</version>
		</dependency>

		<!--Test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- For it test -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>${resteasy.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${resteasy.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${mvn.javadoc.plugin.version}</version>
						<configuration>
							<doclint>${doc-lint}</doclint>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- add this to disable checking -->
									<doclint>${doc-lint}</doclint>
								</configuration>
							</execution>
							<execution>
								<phase>deploy</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<doclint>${doc-lint}</doclint>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Plugin for Unit Test -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${mvn.surefire.plugin.version}</version>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
							<!-- Skips unit tests if the value of skip.unit.tests property is 
								true -->
							<skipTests>${skip.unit.tests}</skipTests>
							<!-- Excludes integration tests when unit tests are run. -->
							<excludes>
								<exclude>**/IT*.java</exclude>
							</excludes>
						</configuration>
					</plugin>

					<!-- Plugin for Integration Test -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${mvn.failsafe.plugin.version}</version>
						<executions>
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<!-- Sets the VM argument line used when integration tests are run. -->
									<argLine>${failsafeArgLine}</argLine>
									<!-- Skips integration tests if the value of skip.integration.tests 
										property is true -->
									<skipTests>${skip.integration.tests}</skipTests>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${mvn.source.plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>net.revelc.code.formatter</groupId>
						<artifactId>formatter-maven-plugin</artifactId>
						<version>${mvn.fmt.plugin.version}</version>
						<configuration>
							<configFile>${project.basedir}/eclipse-java-google-style.xml</configFile>
							<lineEnding>CRLF</lineEnding>
						</configuration>
						<executions>
							<execution>
								<id>validate-code-format</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dev-qa</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${mvn.javadoc.plugin.version}</version>
						<configuration>
							<doclint>${doc-lint}</doclint>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<!-- add this to disable checking -->
									<doclint>${doc-lint}</doclint>
								</configuration>
							</execution>
							<execution>
								<phase>deploy</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<doclint>${doc-lint}</doclint>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Plugin for Unit Test -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${mvn.surefire.plugin.version}</version>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
							<!-- Skips unit tests if the value of skip.unit.tests property is 
								true -->
							<skipTests>${skip.unit.tests}</skipTests>
							<!-- Excludes integration tests when unit tests are run. -->
							<excludes>
								<exclude>**/IT*.java</exclude>
							</excludes>
						</configuration>
					</plugin>

					<!-- Plugin for Integration Test -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${mvn.failsafe.plugin.version}</version>
						<executions>
							<execution>
								<id>integration-tests</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<!-- Sets the VM argument line used when integration tests are run. -->
									<argLine>${failsafeArgLine}</argLine>
									<!-- Skips integration tests if the value of skip.integration.tests 
										property is true -->
									<skipTests>${skip.integration.tests}</skipTests>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Plugin for take project java code coverage by unit and integration 
						tests -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${mvn.jacoco.plugin.version}</version>
						<executions>
							<execution>
								<id>pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<append>true</append>
									<destFile>${jacoco.ut.reportPath}</destFile>
									<propertyName>surefireArgLine</propertyName>
								</configuration>
							</execution>

							<execution>
								<id>post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<append>true</append>
									<dataFile>${jacoco.ut.reportPath}</dataFile>
									<outputDirectory>${jacoco.ut.reportPath.site}</outputDirectory>
								</configuration>
							</execution>

							<execution>
								<id>pre-integration-test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<append>true</append>
									<destFile>${jacoco.it.reportPath}</destFile>
									<propertyName>failsafeArgLine</propertyName>
								</configuration>
							</execution>

							<execution>
								<id>post-integration-test</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${jacoco.it.reportPath}</dataFile>
									<outputDirectory>${jacoco.it.reportPath.site}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>net.revelc.code.formatter</groupId>
						<artifactId>formatter-maven-plugin</artifactId>
						<version>${mvn.fmt.plugin.version}</version>
						<configuration>
							<configFile>${project.basedir}/eclipse-java-google-style.xml</configFile>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${mvn.dependency.plugin.version}</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<includeArtifactIds>lombok</includeArtifactIds>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${mvn.source.plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>